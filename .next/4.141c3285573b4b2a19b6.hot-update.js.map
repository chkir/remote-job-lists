{"version":3,"sources":["/Applications/MAMP/code/sandbox/remote-job-lists/pages/index.js"],"names":["LIMIT","FIND_JOBS_URL","Index","props","onPageChange","page","selected","Router","push","pathname","query","limit","offset","search","url","onSearch","searchTerm","jobCards","jobs","map","job","i","Math","ceil","count","getInitialProps","fetch","qs","stringify","res","json","data","console","log","rows","length"],"mappings":"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","file":"4.141c3285573b4b2a19b6.hot-update.js","sourcesContent":["import { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch'\nimport moment from 'moment';\nimport ReactPaginate from 'react-paginate';\nimport qs from 'query-string';\n\nimport Layout from '../components/Layout';\nimport JobTitle from '../components/JobTitle';\nimport SearchBar from '../components/SearchBar';\n\nconst LIMIT = 50;\n\nconst FIND_JOBS_URL = 'http://localhost:3000/api/jobs';\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    onPageChange = (page) => {\n        const { selected } = page;\n        Router.push({\n            pathname: '/',\n            query: {\n                limit: LIMIT,\n                offset: selected * LIMIT,\n                search: this.props.url.query.search\n            }\n        })\n    }\n\n    onSearch = async (searchTerm) => {\n        Router.push({\n            pathname: '/',\n            query: {\n                search: searchTerm\n            }\n        })\n        // const res = await fetch(FIND_JOBS_URL + `?search=${searchTerm}`);\n        // const data = await res.json();\n\n        // this.setState({\n        //     jobs: data.rows,\n        //     count: data.count.length\n        // });\n    }\n\n    render() {\n\n        const jobCards = this.props.jobs.map((job, i) => {\n            return (\n                <JobTitle job={job} key={`job-item-${i}`} />\n            )\n        })\n\n        return (\n            <Layout>\n                <div className=\"jumbotron jumbotron-fluid\">\n                    <div className=\"container\">\n                        <h1 className=\"display-4\">Hello, world!</h1>\n                        <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n                        <hr className=\"my-4\" />\n                        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                        <p className=\"lead\">\n                            <SearchBar term={this.props.url.query.search} onSearch={this.onSearch} />\n                        </p>\n                    </div>\n                </div>\n\n                <section className=\"container\">\n                    <div className=\"job-list\">\n                        {jobCards}\n                    </div>\n\n                    <ReactPaginate\n                        pageCount={Math.ceil(this.props.count / 50)}\n                        marginPagesDisplayed={2}\n                        onPageChange={this.onPageChange}\n                        pageRangeDisplayed={5}\n                        containerClassName={\"paginate\"}\n                    />\n                </section>\n            </Layout>\n        )\n    }\n}\n\nIndex.getInitialProps = async function ({ query }) {\n\n\n    const res = await fetch(FIND_JOBS_URL + '?' + qs.stringify(query));\n    const data = await res.json()\n\n    console.log(`Show data fetched. Count: ${data.rows.length}/${data.count.length}`)\n\n    return {\n        jobs: data.rows,\n        count: data.count.length\n    }\n}\n\nexport default Index\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}